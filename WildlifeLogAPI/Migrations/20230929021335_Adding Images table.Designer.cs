// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WildlifeLogAPI.Data;

#nullable disable

namespace WildlifeLogAPI.Migrations
{
    [DbContext(typeof(WildlifeLogDbContext))]
    [Migration("20230929021335_Adding Images table")]
    partial class AddingImagestable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WildlifeLogAPI.Models.DomainModels.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1357f76e-ce9f-4ee8-a78e-b69c221d1eb9"),
                            Name = "Mammal"
                        },
                        new
                        {
                            Id = new Guid("faf4a089-1d82-4b56-aff2-a1509d7a4d10"),
                            Name = "Fish"
                        },
                        new
                        {
                            Id = new Guid("f5dc2264-a69c-4ecc-a93d-f2738a050b6f"),
                            Name = "Reptile"
                        },
                        new
                        {
                            Id = new Guid("c160cad4-bf5e-443b-9764-9f7bfb121601"),
                            Name = "Bird"
                        },
                        new
                        {
                            Id = new Guid("a40d0d0b-7e91-48ac-a13d-49aa15cfaded"),
                            Name = "Amphibian"
                        },
                        new
                        {
                            Id = new Guid("b39bb696-2cbc-4542-9ca6-7fd41c38c21b"),
                            Name = "Insect"
                        });
                });

            modelBuilder.Entity("WildlifeLogAPI.Models.DomainModels.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WildlifeLogAPI.Models.DomainModels.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Confidence")
                        .HasColumnType("bit");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObserverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ParkId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("WildlifeLogAPI.Models.DomainModels.Park", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ecosystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33e41267-7a3b-45d3-bd4f-3abd52c79ffb"),
                            Address = "8504 Pacific Coast Hwy, Newport Beach, CA 92657",
                            Ecosystem = "Coastal Sage Scrub",
                            Name = "Crystal Cove State Park",
                            ParkImageUrl = "https://upload.wikimedia.org/wikipedia/commons/a/a0/Crystal_Cove_State_Park_photo_d_ramey_logan.jpg"
                        },
                        new
                        {
                            Id = new Guid("e48b30c8-737d-47fd-8541-a5bf59c7fa92"),
                            Address = "4721 Sapphire Rd, Chino Hills, CA 91709",
                            Ecosystem = "Chapparal",
                            Name = "Chino Hills State Park",
                            ParkImageUrl = ""
                        },
                        new
                        {
                            Id = new Guid("ecd24f9a-10b7-4335-9e8b-cf65cf17077b"),
                            Address = "2301 University Drive Newport Beach, CA 92660",
                            Ecosystem = "Wetland",
                            Name = "Newport Back Bay Nature Preserve",
                            ParkImageUrl = "The_Back_Bay_of_Newport_Beach_CA_by_D_Ramey_Logan"
                        },
                        new
                        {
                            Id = new Guid("fc6b4c42-6d34-470c-be32-850efd9c1796"),
                            Address = "30892 Trabuco Canyon Road, Trabuco Canyon, CA 92678",
                            Ecosystem = "Oak Woodland",
                            Name = "O Neill Regional Park",
                            ParkImageUrl = "https://images.squarespace-cdn.com/content/v1/6037075ce7791c1277a04ce9/1648348253378-E5WB5H5XXKS413HOYEHO/PXL_20220312_164435073.MP_2.jpg?format=750w"
                        },
                        new
                        {
                            Id = new Guid("6efbc351-e98b-48e9-9dac-4a2357bc244f"),
                            Address = "200 Palm Canyon Dr, Borrego Springs, CA 92004",
                            Ecosystem = "Desert",
                            Name = "Anza-Borrego Desert State Park",
                            ParkImageUrl = ""
                        });
                });

            modelBuilder.Entity("WildlifeLogAPI.Models.DomainModels.Log", b =>
                {
                    b.HasOne("WildlifeLogAPI.Models.DomainModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WildlifeLogAPI.Models.DomainModels.Park", "Park")
                        .WithMany()
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Park");
                });
#pragma warning restore 612, 618
        }
    }
}
